/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.*;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Wenqing
 */
public class ManageAgencyPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAgencyPanel
     */
    private MasterFlightSchedule ms;
    private AirlinerDirectory ad;
    private CustomerDirectory cd;
    private JPanel CardPanel;
    private DefaultTableModel dtm;
   

    public ManageAgencyPanel(MasterFlightSchedule ms, AirlinerDirectory ad, CustomerDirectory cd, JPanel card) {
        this.ms = ms;
        this.ad = ad;
        this.cd = cd;
        this.CardPanel = card;
        initComponents();
        populateTable();
    }
    
    private void populateTable(){
        dtm = (DefaultTableModel)FlightTable.getModel();
        dtm.setRowCount(0);
        
        for(Airliner air: ad.getAirliner()){
            FlightSchedule fs = air.getFs();
            if(fs!=null){
                for(Flight f: fs.getSchedule()){                
                    Object row[] = new Object[8];                          
                    row[0] = air.getName();
                    row[1] = f;
                    row[2] = f.getFrom();
                    row[3] = f.getTo();
                    row[4] = f.getDepartureTime();
                    row[5] = f.getArrivalTime();
                    row[6] = f.getDate();
                    row[7] = f.getTimeOfDay();
                    dtm.addRow(row);
                 }                   
            }                    
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FlightTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        FromTxt = new javax.swing.JTextField();
        ToTxt = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        ToDTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ClearBut = new javax.swing.JButton();

        FlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner", "Flight No", "From", "To", "Dep Time", "Arr Time", "Date", "Time of Day"
            }
        ));
        jScrollPane1.setViewportView(FlightTable);

        jLabel1.setText("From: ");

        jLabel2.setText("To: ");

        SearchButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SearchButton.setText("Search Flight");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BackButton.setText("<< Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Time of Day (Day/ Night):");

        ClearBut.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ClearBut.setText("Clear ");
        ClearBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FromTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ToDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClearBut, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addComponent(BackButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(BackButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(FromTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ToTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ToDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ClearBut)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        CardPanel.remove(this);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.previous(CardPanel);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String from = FromTxt.getText();
        String to = ToTxt.getText();
        String TimeOfDay = ToDTxt.getText();
        
        dtm.setRowCount(0);   
        Object row[] = new Object[8];  
        
        HashMap <String, ArrayList<Flight>> map = ms.searchMasterSchedule(from, to, TimeOfDay);
        if(map.isEmpty()){
            JOptionPane.showMessageDialog(null, "No flights found under such criteria");
        }
        
        for(String s:map.keySet()){
            ArrayList<Flight> flist = map.get(s);
             for(Flight f: flist){                                        
                row[0] = s;
                row[1] = f;
                row[2] = f.getFrom();
                row[3] = f.getTo();
                row[4] = f.getDepartureTime();
                row[5] = f.getArrivalTime();
                row[6] = f.getDate();
                row[7] = f.getTimeOfDay();
                dtm.addRow(row);                
            }                         
        }          
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void ClearButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButActionPerformed
        populateTable();
        FromTxt.setText("");
        ToTxt.setText("");
        ToDTxt.setText("");
    }//GEN-LAST:event_ClearButActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ClearBut;
    private javax.swing.JTable FlightTable;
    private javax.swing.JTextField FromTxt;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField ToDTxt;
    private javax.swing.JTextField ToTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}