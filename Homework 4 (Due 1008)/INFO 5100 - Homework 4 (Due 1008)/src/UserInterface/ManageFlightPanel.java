/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.*;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Wenqing
 */
public class ManageFlightPanel extends javax.swing.JPanel {
    private MasterFlightSchedule ms;
    private AirlinerDirectory ad;
    private CustomerDirectory cd;
    private JPanel CardPanel;    
    private DefaultTableModel dtm; 
    private Airliner air;

    /**
     * Creates new form ManageFlightPanel
     */
    public ManageFlightPanel(MasterFlightSchedule ms, AirlinerDirectory ad, CustomerDirectory cd, JPanel CardPanel, Airliner air) {
        this.ms = ms;
        this.ad = ad;
        this.cd = cd;
        this.CardPanel = CardPanel;
        this.air = air;
        initComponents();
        populateTable();
    }       

    public String getAirliner() {
        return air.getName();
    }
        
    private void populateTable(){
        dtm = (DefaultTableModel)FlightTable.getModel();        
        dtm.setRowCount(0);              
        
        for(FlightSchedule s : ms.getMfs()){            
            String name = s.getAirlinername();              
            if(name.equals(air.getName())){               
                displayFlight(s);                        
            }  
        }       
    }
    
    private void displayFlight(FlightSchedule fs){
        for(Flight f: fs.getSchedule()){            
            Object row[] = new Object[7];

            row[0] = f;
            row[1] = f.getFrom();
            row[2] = f.getTo();
            row[3] = f.getDepartureTime();
            row[4] = f.getArrivalTime();
            row[5] = f.getDate();
            row[6] = f.getTimeOfDay();

            dtm.addRow(row);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FlightTable = new javax.swing.JTable();
        AddBut = new javax.swing.JButton();
        UpdateBut = new javax.swing.JButton();
        CancelBut = new javax.swing.JButton();
        BackBut = new javax.swing.JButton();
        RefreshBut = new javax.swing.JButton();

        FlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight No.", "From", "To", "Dep. Time", "Arrival Time", "Date", "Time of Day"
            }
        ));
        jScrollPane1.setViewportView(FlightTable);

        AddBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddBut.setText("Add Flight");
        AddBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButActionPerformed(evt);
            }
        });

        UpdateBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UpdateBut.setText("Update Flight Info");
        UpdateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButActionPerformed(evt);
            }
        });

        CancelBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CancelBut.setText("Cancel Flight");
        CancelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButActionPerformed(evt);
            }
        });

        BackBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BackBut.setText("<< Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        RefreshBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RefreshBut.setText("Refresh");
        RefreshBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AddBut, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(UpdateBut)
                .addGap(18, 18, 18)
                .addComponent(RefreshBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(CancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BackBut)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBut)
                    .addComponent(UpdateBut)
                    .addComponent(CancelBut)
                    .addComponent(RefreshBut))
                .addGap(39, 39, 39)
                .addComponent(BackBut)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButActionPerformed
        int selectedRow = FlightTable.getSelectedRow(); 
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"please select a row");
        }
        else{
            Flight f = (Flight)FlightTable.getValueAt(selectedRow, 0); 
            
            UpdateFlightPanel ufp = new UpdateFlightPanel(ms,ad,cd, CardPanel,f);
            CardPanel.add("CreateFlightPanel", ufp);
            CardLayout lo = (CardLayout) CardPanel.getLayout();
            lo.next(CardPanel);
            
            
            
            ufp.setAirliner(air.getName());            
            
        }        
    }//GEN-LAST:event_UpdateButActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        CardPanel.remove(this);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.previous(CardPanel);
    }//GEN-LAST:event_BackButActionPerformed

    private void AddButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButActionPerformed
        CreateFlightPanel cfp = new CreateFlightPanel(ms,ad,cd, CardPanel);
        CardPanel.add("CreateFlightPanel", cfp);
        CardLayout lo = (CardLayout) CardPanel.getLayout();
        lo.next(CardPanel);
        
        cfp.setAirliner(air.getName());
    }//GEN-LAST:event_AddButActionPerformed

    private void RefreshButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButActionPerformed
        populateTable();
    }//GEN-LAST:event_RefreshButActionPerformed

    private void CancelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButActionPerformed
        int selectedRow = FlightTable.getSelectedRow(); 
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"please select a row");
        }
        else{
            Flight f = (Flight)FlightTable.getModel().getValueAt(selectedRow, 0); 
            
            for(FlightSchedule s : ms.getMfs()){            
            String name = s.getAirlinername();              
            if(name.equals(air.getName())){               
                s.getSchedule().remove(f);
            }  
        }
            
            JOptionPane.showMessageDialog(null,"Flight cancelled for this Airliner");
            populateTable();
        }
    }//GEN-LAST:event_CancelButActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBut;
    private javax.swing.JButton BackBut;
    private javax.swing.JButton CancelBut;
    private javax.swing.JTable FlightTable;
    private javax.swing.JButton RefreshBut;
    private javax.swing.JButton UpdateBut;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}