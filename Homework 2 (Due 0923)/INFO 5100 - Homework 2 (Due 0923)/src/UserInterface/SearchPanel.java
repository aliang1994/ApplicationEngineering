/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;
import Filters.*;
import Business.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Wenqing
 */
public class SearchPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    private ArrayList<Filter> allFilters;
    private FleetCatalogue catalogue;    
    private DefaultTableModel dtm;
    
    public SearchPanel(FleetCatalogue fc) {
        initComponents();
        this.catalogue = fc;   
        allFilters = new ArrayList<Filter>();
       
        populateTable();
    }
    
    private void populateTable(){
        dtm = (DefaultTableModel)displayTable.getModel();
        dtm.setRowCount(0);
        
        for(Airplane air: catalogue.getCatalogue()){
            Object row[] = new Object[8];
            if(air.isIsAvailable()){
                row[0] = "yes";
            }
            else{
                row[0] = "no";
            }                    
            row[1] = air.getManufacturer();
            row[2] = air.getYearManufactured();
            row[3] = air.getNumOfSeats();
            row[4] = air;
            row[5] = air.getModelNo();
            row[6] = air.getCurrentAirport();
            if(air.isMaintenanceValid()){
                row[7] = "yes";
            }
            else{
                row[7] = "no";            
            }            
            dtm.addRow(row);
        }      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        SearchPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        AvailBox = new javax.swing.JCheckBox();
        ManufacturerBox = new javax.swing.JCheckBox();
        YearBox = new javax.swing.JCheckBox();
        AirportBox = new javax.swing.JCheckBox();
        ModelBox = new javax.swing.JCheckBox();
        SerialBox = new javax.swing.JCheckBox();
        SeatBox = new javax.swing.JCheckBox();
        MaintenanceBox = new javax.swing.JCheckBox();
        ClearButton = new javax.swing.JButton();
        MsgTxt = new javax.swing.JTextField();
        SerialTxt = new javax.swing.JTextField();
        AirportTxt = new javax.swing.JTextField();
        YearTxt = new javax.swing.JTextField();
        TablePanel = new javax.swing.JPanel();
        DeleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        UpdateButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel1.setText("Search in Catalogue");

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        AvailBox.setText("Currently Available");

        ManufacturerBox.setText("Manufacturer: Boeing");

        YearBox.setText("Manufactured in Year");

        AirportBox.setText("Current Airport");

        ModelBox.setText("Model No: 777");

        SerialBox.setText("Serial No.");

        SeatBox.setText("Seats between 200 and 600");

        MaintenanceBox.setText("Maintenance Certificate Expired");

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        MsgTxt.setEnabled(false);

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel1))
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(MsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ModelBox)
                    .addComponent(MaintenanceBox)
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(AirportBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AirportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(SerialBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SerialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ManufacturerBox)
                    .addComponent(AvailBox)
                    .addComponent(SeatBox)
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(YearBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchButton)
                .addGap(18, 18, 18)
                .addComponent(ClearButton)
                .addGap(16, 16, 16)
                .addComponent(MsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ModelBox)
                .addGap(3, 3, 3)
                .addComponent(ManufacturerBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SerialBox)
                    .addComponent(SerialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AirportBox)
                    .addComponent(AirportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MaintenanceBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AvailBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeatBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearBox)
                    .addComponent(YearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jSplitPane2.setTopComponent(SearchPanel);

        DeleteButton.setText("Delete Airplane Information");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        displayTable.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 204), null));
        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Availability", "Manufaturer", "Year Manufactured", "Number of Seats", "Serial Number", "Model Number", "Current Airport", "Maintenance Certificate"
            }
        ));
        jScrollPane1.setViewportView(displayTable);

        UpdateButton.setText("Update Info");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TablePanelLayout.createSequentialGroup()
                        .addComponent(UpdateButton)
                        .addGap(18, 18, 18)
                        .addComponent(RefreshButton)))
                .addGap(149, 149, 149))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addComponent(RefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(TablePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        int selectedRow = displayTable.getSelectedRow();
        if(selectedRow >= 0){
            Airplane air = (Airplane)displayTable.getValueAt(selectedRow, 4);
            catalogue.deleteAirplane(air);
            JOptionPane.showMessageDialog(null, "item successfully deleted");
            populateTable();
        }
        else{
            JOptionPane.showMessageDialog(null,"please select a row");
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        dtm.setRowCount(0);
        populateTable();

        allFilters.clear();

        AvailBox.setSelected(false);
        ManufacturerBox.setSelected(false);
        YearBox.setSelected(false);
        SerialBox.setSelected(false);
        AirportBox.setSelected(false);
        MaintenanceBox.setSelected(false);
        SeatBox.setSelected(false);
        ModelBox.setSelected(false);
        
        AirportTxt.setText("");
        SerialTxt.setText("");
        YearTxt.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        dtm = (DefaultTableModel)displayTable.getModel();
        dtm.setRowCount(0);
        for(Airplane air: searchWithFilter()){
            Object row[] = new Object[8];
            if(air.isIsAvailable()){
                row[0] = "yes";
            }
            else{
                row[0] = "no";
            }                    
            row[1] = air.getManufacturer();
            row[2] = air.getYearManufactured();
            row[3] = air.getNumOfSeats();
            row[4] = air;
            row[5] = air.getModelNo();
            row[6] = air.getCurrentAirport();
            if(air.isMaintenanceValid()){
                row[7] = "yes";
            }
            else{
                row[7] = "no";            
            }            
            dtm.addRow(row);
        }
        MsgTxt.setText("System was updated on: " + catalogue.getRecentUpdateTime());
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        updateAirplane();
        catalogue.setRecentUpdateTime(LocalDateTime.now().toString());
        populateTable();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_RefreshButtonActionPerformed
    
    private void updateAirplane(){
        int Row = displayTable.getSelectedRow();          
        if(Row >= 0){                
            JFrame f2 = new JFrame();                 
            f2.setSize(600, 600);
            f2.setVisible(true);          
            UpdatePanel up = new UpdatePanel(catalogue);   
            f2.getContentPane().add(up);    
            
            String avail = (String)displayTable.getModel().getValueAt(Row, 0);
            String manu = (String)displayTable.getModel().getValueAt(Row, 1);
            int year = (int)displayTable.getModel().getValueAt(Row, 2);
            int seat = (int)displayTable.getModel().getValueAt(Row, 3);
            String serial = displayTable.getModel().getValueAt(Row, 4).toString();
            String model = (String)displayTable.getModel().getValueAt(Row, 5);
            String airport = (String)displayTable.getModel().getValueAt(Row, 6);
            String maint = (String)displayTable.getModel().getValueAt(Row, 7);
                    
            if(avail.equals("yes")) {
                up.setAvail(true);
            }            
            else{
                up.setAvail(false);
            }
            up.setManuYear(year);
            up.setNumSeat(seat);
            up.setSerial(serial);
            up.setModel(model);
            up.setAirport(airport);
            if(maint.equals("yes")) {
                up.setMaint(true);
            }            
            else{
                up.setMaint(false);
            }
            up.setManufacturer(manu);
            
        }
        else{
            JOptionPane.showMessageDialog(null,"please select a row");
        }
    }
    
    private ArrayList<Airplane> searchWithFilter(){
        addFilter();
        ArrayList<Airplane> result = new ArrayList<Airplane>();
        ArrayList<Airplane> currList = catalogue.getCatalogue();
        for(Filter f: allFilters){
            result = f.sort(currList);
            currList = result;
        }
        return result;
    }
    
    private void addFilter(){  
        Filter f1 = new AvailFilter();
        if(AvailBox.isSelected()){              
            allFilters.add(f1);              
        }        
   
        Filter f2 = new ManufacturerFilter();
        if(ManufacturerBox.isSelected()){
            allFilters.add(f2);
        }    
        
        ManuYearFilter f3 = new ManuYearFilter();
        if(YearBox.isSelected()){
            allFilters.add(f3);
            int i = getYear();
            f3.setYear(i);
        }       
        
        Filter f4 = new SeatFilter();
        if(SeatBox.isSelected()){
            allFilters.add(f4);
        }
      
        Filter f5 = new ModelFilter();
        if(ModelBox.isSelected()){
            allFilters.add(f5);
        }
        
        AirportFilter f6 = new AirportFilter();
        if(AirportBox.isSelected()){
            allFilters.add(f6);
            String s = getAirport();
            f6.setAirport(s);
        }
        
        Filter f7 = new MaintenanceFilter();
        if(MaintenanceBox.isSelected()){
            allFilters.add(f7);
        }
        
        SerialFilter f8 = new SerialFilter();
        if(SerialBox.isSelected()){
            allFilters.add(f8);
            String s = getSerial();
            f8.setSerial(s);
        }
    }

    public String getSerial(){
        String s = SerialTxt.getText();
        return s;
    }
    
    public String getAirport(){
        String s = AirportTxt.getText();
        return s;
    }
    
    public int getYear(){
        String s = YearTxt.getText();
        int i = Integer.parseInt(s);
        return i;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AirportBox;
    private javax.swing.JTextField AirportTxt;
    private javax.swing.JCheckBox AvailBox;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JCheckBox MaintenanceBox;
    private javax.swing.JCheckBox ManufacturerBox;
    private javax.swing.JCheckBox ModelBox;
    private javax.swing.JTextField MsgTxt;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JCheckBox SeatBox;
    private javax.swing.JCheckBox SerialBox;
    private javax.swing.JTextField SerialTxt;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JCheckBox YearBox;
    private javax.swing.JTextField YearTxt;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane2;
    // End of variables declaration//GEN-END:variables
}