/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Employee;

import Business.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wenqing
 */
public class OrderPanel extends javax.swing.JPanel {
    private JPanel card;
    private SupplierDirectory sd;
    private MarketOfferCatalogue moc;
    private MarketList ml;
    private Customer c;
    private Order order;
    private Person p;
    private DefaultTableModel orderModel;
    
    private boolean checkout = false;
    
    //added
    private Market m;

   

    public OrderPanel(JPanel cardPanel, SupplierDirectory sd, MarketOfferCatalogue moc, MarketList ml, Customer cus, Person p) {
        initComponents();
        this.card = cardPanel;
        this.sd = sd;
        this.moc = moc;
        this.ml = ml;
        this.c = cus;
        this.p = p;
        initComponents();
        
        if(!checkout){
            order = new Order(); 
        }        
        
        populateMarketOffer();        
    }
    
    private void populateMarketOffer(){
        DefaultTableModel dtm = (DefaultTableModel)MarketOfferTable.getModel();
        dtm.setRowCount(0);
        
        Object row[] = new Object[5];
        for(MarketOffer mo: moc.getList()){
            Market mark = c.getM();
            if(mo.getM().equals(mark)){
                row[0]= mo;
                row[1]= mo.getP().getId();
                row[2]= mo.getFloorPrice();
                row[3]= mo.getTargetPrice();
                row[4]= mo.getCeilingPrice();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MarketOfferTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        AddBut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PriceTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        QuantityTxt = new javax.swing.JTextField();
        CancelBut = new javax.swing.JButton();
        SubmitBut = new javax.swing.JButton();
        BackBut = new javax.swing.JButton();

        MarketOfferTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MarketOfferTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "Floor Price", "Target Price", "Ceiling Price"
            }
        ));
        jScrollPane1.setViewportView(MarketOfferTable);

        OrderTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Purchase Price"
            }
        ));
        jScrollPane2.setViewportView(OrderTable);

        AddBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddBut.setText("Add to Cart");
        AddBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Purchase Price:");

        PriceTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Quantity:");

        QuantityTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        CancelBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CancelBut.setText("Cancel Order");
        CancelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButActionPerformed(evt);
            }
        });

        SubmitBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SubmitBut.setText("Submit Order");
        SubmitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButActionPerformed(evt);
            }
        });

        BackBut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BackBut.setText("Back<<");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(SubmitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(QuantityTxt))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(PriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(QuantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubmitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackBut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CancelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButActionPerformed
        int row = OrderTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;            
        }
        OrderItem selected = (OrderItem)OrderTable.getValueAt(row,0);
        order.deleteItem(selected);
        populateOrder();
        JOptionPane.showMessageDialog(null,"Order deleted");
    }//GEN-LAST:event_CancelButActionPerformed

    private void AddButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButActionPerformed
        int row = MarketOfferTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;            
        }
        else if(PriceTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please input your price");
        }
        else if(QuantityTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please input your quantity");
        }
        else{
            MarketOffer selected = (MarketOffer)MarketOfferTable.getValueAt(row,0);
            Product p = selected.getP();
            double price = Double.parseDouble(PriceTxt.getText());
            int quant = Integer.parseInt(QuantityTxt.getText());
            if(price >= selected.getCeilingPrice() || price <= selected.getFloorPrice()){
                JOptionPane.showMessageDialog(null,"actual price should be in the range");
            }
            else{
                OrderItem oi = new OrderItem(selected);
                order.addItem(oi);
                oi.setP(p);
                oi.setQuantity(quant);
                oi.setSalesPrice(price);

                populateOrder();
                JOptionPane.showMessageDialog(null,"Item added succesfully!");
                PriceTxt.setText("");
                QuantityTxt.setText("");
            }
        }
    }//GEN-LAST:event_AddButActionPerformed

    private void SubmitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButActionPerformed
        order.setCustomer(c);
        c.addOrder(order);
        p.addOrder(order);
        checkout = true;
        JOptionPane.showMessageDialog(null,"New order placed successfully");
        order = new Order();
        populateOrder();            
    }//GEN-LAST:event_SubmitButActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        card.remove(this);
        CardLayout layout = (CardLayout) card.getLayout();
        layout.previous(card);
    }//GEN-LAST:event_BackButActionPerformed
    
    private void populateOrder(){
        orderModel = (DefaultTableModel)OrderTable.getModel();
        orderModel.setRowCount(0);
        for(OrderItem oi: order.getList()){
            Object row[] = new Object[3];
            row[0]= oi.getP();
            row[1]= oi.getQuantity();
            row[2]= oi.getSalesPrice();
            orderModel.addRow(row);
        }        
        refreshTotal();
    }
    public void refreshTotal(){
        int totalPrice = 0;
        for(OrderItem oi: order.getList()){
            totalPrice = (int) (totalPrice + oi.getSalesPrice()*oi.getQuantity());
        }
        order.setTotalPrice(totalPrice);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBut;
    private javax.swing.JButton BackBut;
    private javax.swing.JButton CancelBut;
    private javax.swing.JTable MarketOfferTable;
    private javax.swing.JTable OrderTable;
    private javax.swing.JTextField PriceTxt;
    private javax.swing.JTextField QuantityTxt;
    private javax.swing.JButton SubmitBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}